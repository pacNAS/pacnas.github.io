<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[pacNAS]]></title>
  <link href="http://pacNAS.github.io/atom.xml" rel="self"/>
  <link href="http://pacNAS.github.io/"/>
  <updated>2014-06-11T22:50:14+02:00</updated>
  <id>http://pacNAS.github.io/</id>
  <author>
    <name><![CDATA[pacNAS community]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[future - a couple of ideas]]></title>
    <link href="http://pacNAS.github.io/blog/2014/06/11/future/"/>
    <updated>2014-06-11T20:54:00+02:00</updated>
    <id>http://pacNAS.github.io/blog/2014/06/11/future</id>
    <content type="html"><![CDATA[<p>First post after a couple of busy month. After setting up my cubox-i (of course using
<a href="http://petemanchester.github.io/MediaPlayer/">MediaPlayer</a>) and some more systems
at home, I am back on track and try to push pacnas further.</p>

<p>Unfortunately there is not a lot of community interest in this project right now, so
if you like to participate or contribute, just write an email to <a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x74;&#x72;&#105;&#112;&#x6c;&#x65;&#x6d;&#64;&#x70;&#x61;&#99;&#x6e;&#97;&#115;&#46;&#100;&#101;">&#x74;&#114;&#x69;&#x70;&#108;&#101;&#x6d;&#x40;&#112;&#x61;&#99;&#110;&#x61;&#x73;&#x2e;&#100;&#x65;</a>.</p>

<p>Currently I do have some ideas for the future of this project and I would like to
bring these to your attention in this post.</p>

<h1>Release Concept</h1>

<p>After looking at a lot of other distributions, I do like the concept of <a href="http://www.archlinux.org">ArchLinux</a>
&ndash; pretty obvious, since this distro is going to be based on this one &ndash; but also
I do like others as well. For the release concept, I think, that <a href="http://alpinelinux.org/">alpinelinux</a>
has a very interesting one. It is a rolling release distro, if you look at the so
called &ldquo;edge&rdquo;-version. But furthermore there are several &ldquo;stable&rdquo; releases. Those
are snapshotted roughly every 6 month. Alpine seems to use the currently available
kernel at that time.</p>

<p><a href="http://www.ubuntu.com/">Ubuntu</a> is doing something similar, in that they do a
release every 6 month and every 2 years they do an LTS release. They do have the
manpower to path their own LTS-Kernel, which is out of reach for us.</p>

<p>So every 6 month seem to be too often for a NAS distribution. Furthermore it looks
like, there needs to be patches for all available releases and this seems to be
too much work right now as well. One of the major tasks involved are IMHO the patches
for the kernel, because not every used kernel is an LTS kernel. See where this is
heading? I guess, the solution to this one, would be to make a release every year
at the time an LTS-kernel appears.</p>

<p>Obviously this does resolve patches for the Kernel, but other applications do have
different release cycles. This means, that the Snapshot could come to a slightly
too late or too early time for some applications. But this seems to be a minor
issue, in that if really needed for security purposes, the version could be bumped
even during a stable release (as long as the configuration of this application does
not change).</p>

<p>So the release concept for pacnas will look like the following:</p>

<ul>
<li>have a rolling release</li>
<li>have a &ldquo;stable&rdquo; release once a year or every two years when a LTS kernel appears
(this could already be 3.16?)</li>
<li>support each stable release for at least until the next stable release appears and
slightly longer (6 month?)</li>
</ul>


<h2>Implications</h2>

<p>To have a rolling release as well as a stable release does mean some implications
on the package selection. In the first release we could try to use the standard
pacman and provide a mirrorlist, which contains the release in the path to the
packages. This could be a problem, if a user would like to upgrade from one release
to another or to the rolling release. Therefor we could provide different mirrorlist-files
which contain a line like this:</p>

<p>´´´
Server = <a href="http://host/pacnas/rolling/$repo/os/$arch">http://host/pacnas/rolling/$repo/os/$arch</a>
´´´</p>

<p>or</p>

<p>´´´
Server = <a href="http://host/pacnas/stable-1/$repo/os/$arch">http://host/pacnas/stable-1/$repo/os/$arch</a>
´´´</p>

<p>Please note, that the names of the releases are not fixed yet ;&ndash;)</p>

<h1>Security</h1>

<p>Security is pretty high on most server distributions. Alpine does solve this by
using <a href="http://grsecurity.net/">grsecurity</a> patches as well as <a href="http://pax.grsecurity.net/">Pax</a>
and most probably through other tools and/or patches on applications.</p>

<p>I guess we will put this on the todo list since right now, there is not much experience
with stuff like this. But it will be put very high on the list.</p>

<h1>Package Selection</h1>

<p>The package selection is pretty important as well. Since there are not much contributions
right now, the package selection will be very stripped. I gather, that the most
important packages for a NAS system will be put into the distro.</p>

<h2>first release</h2>

<ul>
<li>linux (well, that is obvious, right)</li>
<li>btrfs</li>
<li>samba</li>
<li>nfs</li>
<li>ssh</li>
<li>netctl</li>
<li>mdadm</li>
<li>ftp</li>
<li>rsync</li>
</ul>


<h2>future releases</h2>

<ul>
<li>ajenti or genesis</li>
<li>nginx</li>
<li>owncloud</li>
<li>seafile</li>
<li>crashplan</li>
<li>&hellip;</li>
</ul>


<p>If you have specific packages, which you would like to see on this list, do not
hesitate and write an email to the above mentioned email.</p>

<h1>Automatisms</h1>

<p>Since this distro is currently really understuffed (people and timewise), we need
as much automatisms as possible.</p>

<p>We are going to use the <a href="http://build.pacnas.de">pacnas buildbot</a> to build the
packages. Most probably this needs to get extended to be able to build dependent
packages in the correct order and fully automatic.</p>

<p>Furthermore we need to &ldquo;copy&rdquo; packages from AL to our own repository. This should
be done automatically as well. The most important part is to be able to sync changes
in AL into our own Repo, if necessary. At least the watch of changes needs to get
automated.</p>

<h1>Next Steps</h1>

<p>During the next couple of days, I will dig into the above mentioned automatisms
and will try to automate as much as possible.</p>

<p>Some Marketing is required as well, but before we are going to make some advertisement
we should have a first rough version ready.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mediaplayer]]></title>
    <link href="http://pacNAS.github.io/blog/2014/01/13/media-player/"/>
    <updated>2014-01-13T20:29:00+01:00</updated>
    <id>http://pacNAS.github.io/blog/2014/01/13/media-player</id>
    <content type="html"><![CDATA[<p>First post this year, and I can annouce some progress on my personal media player
setting. My media setup is (like described earlier) totally based on UPnP. The
media server is <a href="http://minimserver.com">minimserver</a>, which will run on the pacnas
server. The UPnP control point is <a href="https://play.google.com/store/apps/details?id=com.bubblesoft.android.bubbleupnp&amp;hl=de">BubbleUPnP</a>
for my Android Smartphone.</p>

<p>I have already bought an <a href="http://www.cocktailaudio.de/index.php/de/funktionen.html">X10</a>,
but unfortunately this did not work out really as an UPnP Renderer. It works nicely
but not gapless, which is a necessity for me, because I do own quite some MixCDs.
There is a lot of discussion going on in the Forums, and hopefully they will add
this functionality. Therefor I just bought myself an <a href="http://cubox-i.com/">Cubox</a>
and I hope that this will work out. To test it, I just setup my Raspberry Pi with
<a href="http://www.runeaudio.com/">runeaudio</a> and installed <a href="https://github.com/ademenev/gmrender-resurrect-openhome">gmrenderer-resurrect-openhome</a>
on it, to enjoy the (currently bad quality) sound of my digitalized CD collection.</p>

<p>To get this really up and running, I needed to follow the <a href="http://blog.scphillips.com/2013/07/playing-music-on-a-raspberry-pi-using-upnp-and-dlna-revisited/">Installation Guide</a> from Stephen. Nice one, based on Debian, but still very
helpful. So I guess, that we are going to provide a package for the
 <a href="http://www.bubblesoftapps.com/bubbleupnpserver/">BubbleUPnP Server</a> on the pacnas system as well ;&ndash;)</p>

<p>Hope this helps you as well ;&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[year end notice]]></title>
    <link href="http://pacNAS.github.io/blog/2013/12/30/year-end-notice/"/>
    <updated>2013-12-30T16:37:00+01:00</updated>
    <id>http://pacNAS.github.io/blog/2013/12/30/year-end-notice</id>
    <content type="html"><![CDATA[<p>This post is just a notice to inform you, that the year is going to end, but not
this project. Currently we are adding some functionalities to ajenti to provide a
working system also on ArchLinux. Since we are based on ArchLinux, this is also
of interest for our own project (lets put it in other words, we are doing these
extensions specifically for us and these are working on AL as well).</p>

<!-- more -->


<p>We still have plans for the project. It was quite silent during the last month,
but nonetheless we are still working behind the scenes on it. See especially the
commits we have done on the <a href="https://github.com/Eugeny/ajenti">ajenti</a>.</p>

<p>Furthermore we are trying to get approval of Simon (the owner of minimserver), to
be able to provide this nice UPNP-Server directly in our distro.</p>

<p>So, you see, some small but necessary features are in the works, and the next
most needed step is a first release of the installer-ISO. Please wait a couple of
days (aeh, weeks?) and this is going to happen.</p>

<p>Up until then, I do wish you all a happy new year ;&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[install willie]]></title>
    <link href="http://pacNAS.github.io/blog/2013/11/23/install-willie/"/>
    <updated>2013-11-23T20:24:00+01:00</updated>
    <id>http://pacNAS.github.io/blog/2013/11/23/install-willie</id>
    <content type="html"><![CDATA[<p>This is mainly a documentation post on how to install <a href="http://willie.dftba.net/">willie</a>
as a service on an ArchLinux server.</p>

<!-- more -->


<p>All necessary dependencies can be installed easily with pacman (mainly: python2-pytz
and python2-pyopenssl). The willie PKGBUILD can be found in the <a href="https://aur.archlinux.org/packages/willie/">AUR</a>.</p>

<p>After the install, the bot installs a new configuration file in ~/.willie. This file
should be adopted later. I have made the following adoptions to the config:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[core]
</span><span class='line'>logdir = /var/log/willie
</span><span class='line'>pid_dir = /run/willie</span></code></pre></td></tr></table></div></figure>


<p>The above mentioned directories are created manually ;&ndash;) Of course the rights
need to be set as well:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chown root:willie /var/log/willie -R
</span><span class='line'>chmod g+w /var/log/willie -R
</span><span class='line'>
</span><span class='line'>chown root:willie /run/willie -R
</span><span class='line'>chmod g+w /run/willie -R</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[db]
</span><span class='line'>userdb_type = sqlite
</span><span class='line'>userdb_file = /var/lib/willie/willie.db</span></code></pre></td></tr></table></div></figure>


<p>The above mentioned directory is created manually as well. The db-file is
created then automatically. The rights need to get set here as well:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chown root:willie /var/lib/willie -R
</span><span class='line'>chmod g+w /var/lib/willie -R</span></code></pre></td></tr></table></div></figure>


<p>A new user (willie) is created using the following command</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>useradd -d /var/lib/willie -M willie</span></code></pre></td></tr></table></div></figure>


<p>The I copied the <a href="https://github.com/embolalia/willie/blob/master/contrib/willie.service">willie.service</a>
to /etc/systemd/system/willie.service. Some pathes (e.g. to the config file) needs to get adopted
accordingly. Of course this service needs to get enabled via systemctl ;&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[own repository]]></title>
    <link href="http://pacNAS.github.io/blog/2013/11/11/own-repository/"/>
    <updated>2013-11-11T20:57:00+01:00</updated>
    <id>http://pacNAS.github.io/blog/2013/11/11/own-repository</id>
    <content type="html"><![CDATA[<p>Our own binary repository is now reachable on the newly installed server
build.pacnas.org. To use this repository, you should edit your mirrorlist
and point it to <a href="http://build.pacnas.org/pacnas/$repo/os/$arch.">http://build.pacnas.org/pacnas/$repo/os/$arch.</a> We do provide
the following repositories:</p>

<!-- more -->


<ul>
<li>pn-core</li>
<li>pn-extra</li>
<li>pn-community and</li>
<li>pn-testing</li>
</ul>


<p>Those repositories are filled via our own now up and working buildbot instance
at <a href="http://build.pacnas.org/buildbot">http://build.pacnas.org/buildbot</a></p>

<p>If you are willing to contribute, you can get access to the bot as well as
are able to provide an own buildslave. We are working also on a PKGBUILD to
install the slave to an pacNAS system. The sources for the buildbot are located
in our github repository at <a href="http://github.com/pacNAS/pnbuildbot">http://github.com/pacNAS/pnbuildbot</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pacnas buildbot]]></title>
    <link href="http://pacNAS.github.io/blog/2013/11/02/pacnas-buildbot/"/>
    <updated>2013-11-02T20:29:00+01:00</updated>
    <id>http://pacNAS.github.io/blog/2013/11/02/pacnas-buildbot</id>
    <content type="html"><![CDATA[<p>In my last post, I have written about the <a href="http://vlcore.vectorlinux.com/buildbot/">VectorLinux Buildbot</a>.
We have now adopted this basic bot configuration to our needs and published it to
our <a href="http://github.com/pacNAS/pnbuildbot">github repository</a>.</p>

<p>The next step is now, to get this bot installed on our server, to make full use of it.
The bot is configured mainly via the pnconf.ini-File. Furthermore the manifest-File
contains a list of all packages, which are being build with the bot.</p>

<p>Oh, one more thing. We have now setup an IRC-Channel on the freenode-Network (where else).
You can try to get in contact with us on the #pacnas Channel. Hope to see you there.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[howto build a buildservice]]></title>
    <link href="http://pacNAS.github.io/blog/2013/10/27/howto-build-a-buildservice/"/>
    <updated>2013-10-27T20:23:00+01:00</updated>
    <id>http://pacNAS.github.io/blog/2013/10/27/howto-build-a-buildservice</id>
    <content type="html"><![CDATA[<p>Currently we are trying to automate the build of our own packages. Therfore we just have
rented a server from <a href="http://www.netcup.de">netcup.de</a>, because they do have some fair
offers (see <a href="http://www.netcup.de/bestellen/produkt.php?produkt=547">here</a>).
Based on this offer, we do have already established our own package repository (a domain for
this will be published soon). Furthermore we need a build service, and this should be based
on the already exisiting build-services from archlinux (called devtools).</p>

<!-- more -->


<p>After some initial investigations, the <a href="http://www.buildbot.net">buildbot</a> seems to be a
good solution to build something like this fully automatic. After looking at the
ArchLinux <a href="https://wiki.archlinux.org/index.php/Automated_Package_Build_System">Quarters</a> wiki
page and the proposed solutions there, we decided to take a look at other possible solutions
and walked across <a href="http://vlcore.vectorlinux.com/buildbot/">VectorLinux Buildbot</a>.</p>

<p>This buildbot is a adoption of the original buildbot and offers some modifications, which
are necessary for us as well (e.g. one multi-project repository with several &ldquo;packages&rdquo;). You
can take a look at their source code <a href="https://bitbucket.org/VLCore/vlbuildbot/src">here</a>.</p>

<p>Since buildbot does a separation of a build into several steps, we defined the following
steps for our builds:</p>

<ol>
<li>create the source package of a package (using makepkg &mdash;allsource)</li>
<li>create two build chroots (i686 and x86_64)</li>
<li>copy source package and build in the corresponding chroot (e.g. each architecture)</li>
<li>copy build source package to a accessable directory (accessable from a HTTP share)</li>
<li>copy build package into the corresponding repository (e.g. core/extra/community and i686/x86_64/any)</li>
</ol>


<p>We tried already some different order and separation of build steps (try to use the grub
package, since this one does seem to be &ldquo;special&rdquo;, and requires some special treatment, e.g.
it is using bzr as a source package as well as it uses the CARCH-Variable in the PKGBUILD)
and the above build order seemed to work quite well. Further adjustements int he future are
possible and will be implemented, if the need arises.</p>

<p>There are still some issues concerning permissions, but those do seem to be resolvable. Other then
that we do plan to push a first rough draft of our solution to github quite soon, pleas watch the
devtools-repository and most probably a new repository with the buildbot itself will pop up as well.</p>

<p>Up until this, we are more then happy to receive some feedback from your side. What are your thoughts
on this one?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pacnas installer]]></title>
    <link href="http://pacNAS.github.io/blog/2013/10/06/pacnas-installer/"/>
    <updated>2013-10-06T17:19:00+02:00</updated>
    <id>http://pacNAS.github.io/blog/2013/10/06/pacnas-installer</id>
    <content type="html"><![CDATA[<p>Our installer (currently a very easy and still a rough draft version) brought up
a couple of problems. We have taken a look onto the <a href="https://github.com/Antergos/Cnchi">antergos Cnchi installer</a>
and decided that the CLI part of it seems to be a good starting poing.</p>

<!-- more -->


<p>We have stripped this installer and reworked it, so that we can use it for our own
purposes. Basically the installer does now provide the following functionality:</p>

<ul>
<li>Select the language</li>
<li>Select a keymap</li>
<li>Adjust time and date &ndash; This is not working right now, in that the selected
date and time are not used on the new installed system.</li>
<li>Prepare Harddrives &ndash; This is an easy way to partition and format the harddrive
fully automatic. The subvolumes for btrfs are created in this step as well. There
is still some work needed to provide some adjustements for ssds and normal hard disks.</li>
<li>Install the System &ndash; The base packages are installed into the newly created system.</li>
<li>Configure the System &ndash; Some minor configuration for the system.</li>
</ul>


<p>Well, this is pretty much it. We definitly would like to add some possibilities, so
that you are able to provide your own partition scheme, if you would like to. Most
probably we will follow the steps used from the original
<a href="https://wiki.archlinux.org/index.php/Installation_Guide">ArchLinux Install scripts</a>.</p>

<p>Furthermore there is still some room for error handling and other optimizations, but
for a rough first draft, it looks pretty good ;&ndash;)</p>

<p>One problem arose during the implementation. Since we are using btrfs on our root
file system, the mkinitcpio-fsck-hook reported an error, that fsck.btrfs is not
available. Digging into this issue brought up some <a href="https://bugs.archlinux.org/task/37203">errors</a>
in the ArchLinux bugtracker. Due to the response in the shown Bug, we have decided
to provide our own <a href="https://github.com/pacNAS/pkgbuilds/tree/master/core/mkinitcpio">mkinitcpio-package</a>.
This version basically patches the HOOKS-variable to not use the fsck-hook anymore.</p>

<p>So, if you have any ideas and/or recommendations for improvements of the installer,
feel free to fork and add pull requests. We are more then happy to receive those ;&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[btrfs - best practices - part 2]]></title>
    <link href="http://pacNAS.github.io/blog/2013/09/11/btrfs-best-practices-part-2/"/>
    <updated>2013-09-11T22:39:00+02:00</updated>
    <id>http://pacNAS.github.io/blog/2013/09/11/btrfs-best-practices-part-2</id>
    <content type="html"><![CDATA[<p>We discussed the usage of btrfs in our previous post. We discovered a nice
mkinitcpio-hook, which allows us to provide a rollback option based on snapshots.
We have forked an up-to-date version, and will most probably provide some
additional documentation and scripts. For the source of the package see <a href="https://github.com/pacNAS/mkinitcpio-btrfs">github &ndash; source</a>
and <a href="https://github.com/pacNAS/pkgbuilds/tree/master/core/mkinitcpio-btrfs">gihub &ndash; package</a>.</p>

<p>Our new installer will use the suggested structure of the btrfs subvolumes while creating
the disk structure of the new system.</p>

<p>We do have created a new version of the above mentioned sources. This new version is
slightly adopted to our needs. The original version (<a href="https://github.com/xtfxme/mkinitcpio-btrfs">xtfxme</a>)
contains both the logic/source as well as the PKGBUILD, which we split, to keep these
separate.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[btrfs - best practices]]></title>
    <link href="http://pacNAS.github.io/blog/2013/09/10/btrfs-best-practices/"/>
    <updated>2013-09-10T20:56:00+02:00</updated>
    <id>http://pacNAS.github.io/blog/2013/09/10/btrfs-best-practices</id>
    <content type="html"><![CDATA[<p>Right now we are adapting the installer to use btrfs as the base filesystem for
the PacNAS system. There are obviously a couple of ways on implementing this, so
that we try to &ldquo;suggest&rdquo; one way to do this, but also allowing other possible ways
as well.</p>

<!-- more -->


<ol>
<li><p>Partioning
If you are searching for &ldquo;btrfs best practices&rdquo;, you will stumb across <a href="http://comments.gmane.org/gmane.comp.file-systems.btrfs/25423">this</a>
mailing list entry, and I guess, we are going to follow the &ldquo;partition instead
of raw device&rdquo; philosophy. We will create one partition on the wanted device and
will then separate the partition by using subvolumes.</p></li>
<li><p>Subvolumes
I guess, that <a href="http://blog.fabio.mancinelli.me/2012/12/28/Arch_Linux_on_BTRFS.html">Bitloom</a>
suggests a valid approach for subvolumes on a btrfs root volume. What I don&rsquo;t like about
his approach is the subvolume for /var and the mounting of /var/lib into the root
subvolume. If you take a look on <a href="http://blog.patshead.com/2010/02/testing-btrfs-root-file-system-on-ubuntu.html">patshead.com</a>
you will read, that he prefers to creates many subvolumes beneath the root of the
Btrfs volume. I guess this is a way more KISS way.</p></li>
</ol>


<h1>&ldquo;Our&rdquo; Best Practices</h1>

<ol>
<li>We are partioning the wanted drive with just one partition.</li>
<li>We are creating a couple of subvolumes (rootfs, tmpfs) on this partition and
mount these volumes to the corresponding mount points (/ to rootfs, /tmp to tmpfs).</li>
<li>On each update of the system, we are creating a snapshot (at least provide
some scripts for this), and do provide a mechanism to &ldquo;undo&rdquo; the latest update.</li>
<li>We are not using a homefs subvolume, since we strongly believe that the home
directories are stored on separate partitions (meaning: data drives). Of course
these data drives can (and should) be formatted with btrfs.</li>
<li>It is a possibility to use the btrfs seed-device as a &ldquo;live&rdquo; system and copy this
drive over to the new system. This needs to get investigated, but see <a href="http://en.wikipedia.org/wiki/Btrfs#Seed_devices">Wikipedia &ndash; btrfs</a>.</li>
</ol>


<h1>Some Roadmap Things</h1>

<ol>
<li>Create scripts for creating and restoring snapshots before/after an pacman
update.</li>
<li>Add mkinitcpio-btrfs hook as a default.</li>
</ol>


<p>What do you think about our Best Practices, what suggestions do you have? We are
more then happy to get some feedback.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pacNAS - Why A New Distro?]]></title>
    <link href="http://pacNAS.github.io/blog/2013/08/25/pacnas-why-a-new-distro/"/>
    <updated>2013-08-25T14:01:00+02:00</updated>
    <id>http://pacNAS.github.io/blog/2013/08/25/pacnas-why-a-new-distro</id>
    <content type="html"><![CDATA[<p>A couple of month ago I did start to rip all my CDs into the nowadays quite
popular flac-format. Just as an information, you can take a look into <a href="http://www.discogs.com/collection?user=triplem74">my</a>
discogs collection. This collection contains all CDs in my collection, which are
already converted. Right now (current number of collection items is 521) I did
convert already half of the whole (and unfortunately still growing) collection.</p>

<p>During this phase of ripping and tagging and handling my collection, I was searching
for a nice Media Player, which is able to play my quite large music collection
and present this in a &ldquo;standard&rdquo; way. Some goodies on this would be a control of
what is played via my smartphone or some other nice way (e.g. web interface). I
stumbled across <a href="http://www.minimserver.com">minimserver</a> and I am still very much
interested in this project.</p>

<!-- more -->


<p>So now you are asking, what does this have to do with a NAS distribution? Well,
during my search for this &ldquo;music server&rdquo; I looked for different NAS distributions
(music files can grow quite quickly and there is lots of disc space needed) and
decided, that I need a NAS to store all my files. This NAS should be able to run
minimserver and also probably some other related stuff (like e.g. a kind of proxy,
to be able to let the music stream to my stereo without having the smartphone
turned on all the time). Since minimserver uses Java I thought, all is fine and
I can probably use an already existing NAS distribution. But far from it, since
minimserver is also using some distribution related binaries. This is still possible
with all of the NAS distributions, but with a higher effort (at least on the
FreeBSD based distros, since there I needed the Linux compatibility mode).</p>

<p>Of course I stumbled on the <a href="http://openmediavault.org/">OpenMediaVault</a> distro,
which is Linux based. This distro is based on Debian, which I am not really into,
and furthermore it is based on a slightly outdated Kernel, so I would not be able
to use the latest up and coming filesystem (Btrfs).</p>

<p>After some digging around and much thoughts, I decided to create a new distro based
on my preferred distro <a href="http://www.archlinux.org">ArchLinux</a>. This distro has the
advantage, that I know it quite well (I use it since nearly 5 years) and it has
a very large and active community. Furthermore it does provide the latest and greatest
kernel version all the time.</p>

<p>Since I already participated in a &ldquo;new distribution project&rdquo; (ArchServer), I
asked the founder of this project (fukawi2), if he would like to participate.
Fortunately, he said yes. The new distro &ldquo;pacNAS&rdquo; was born.</p>

<p>Why the name pacNAS? pacNAS is a concatination of the word &ldquo;pacman&rdquo; (the famous
package manager of ArchLinux) and the word &ldquo;NAS&rdquo;, which tells you, that we are mainly
focused on being a NAS distribution.</p>

<p>If you have any further questions, remarks, do not hesitate to leave a comment.
Furthermore, if you like the idea and like to participate as well, contact us via
email (see our <a href="http://github.com/pacNAS">github project</a>).</p>
]]></content>
  </entry>
  
</feed>
